{"version":3,"sources":["scripts/main.js"],"names":["showNotification","messageType","message","body","document","querySelector","notification","createElement","classList","add","setAttribute","innerText","append","promise1","Promise","resolve","reject","addEventListener","setTimeout","Error","then","promise2","e","preventDefault","promise3","btnLeft","btnRight","button"],"mappings":";AACA,aAEA,SAASA,IAAiBC,IAAAA,EAAc,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,UAAWC,EAAS,UAAA,OAAA,EAAA,UAAA,QAAA,EACpDC,EAAOC,SAASC,cAAc,QAC9BC,EAAeF,SAASG,cAAc,OAE5CD,EAAaE,UAAUC,IAAIR,GAC3BK,EAAaI,aAAa,UAAW,gBACrCJ,EAAaK,UAAYT,EACzBC,EAAKS,OAAON,GAGd,IAAMO,EAAW,IAAIC,QAAQ,SAACC,EAASC,GACrCZ,SAASa,iBAAiB,QAAS,WACjCF,EAAQ,CACNd,YAAa,UACbC,QAAS,iCAIbgB,WAAW,WACTF,EAAO,IAAIG,MAAM,gCAChB,OAGLN,EACGO,KACC,SAA8B,GAC5BpB,EADCC,EAAAA,YAAaC,EAAAA,UAGhB,SAA8B,GAC5BF,EADCC,EAAAA,YAAaC,EAAAA,WAKpB,IAAMmB,EAAW,IAAIP,QAAQ,SAACC,EAASC,GACrCZ,SAASa,iBAAiB,QAAS,WACjCF,EAAQ,CACNd,YAAa,UACbC,QAAS,kCAIbE,SAASa,iBAAiB,cAAe,SAACK,GACxCA,EAAEC,iBAEFR,EAAQ,CACNd,YAAa,UACbC,QAAS,oCAKfmB,EACGD,KACC,SAA8B,GAC5BpB,EADCC,EAAAA,YAAaC,EAAAA,WAKpB,IAAMsB,EAAW,IAAIV,QAAQ,SAACC,EAASC,GACjCS,IAAAA,GAAU,EACVC,GAAW,EAEftB,SAASa,iBAAiB,YAAa,SAACK,GACrB,IAAbA,EAAEK,SACJF,GAAU,GAGK,IAAbH,EAAEK,SACJD,GAAW,IAGG,IAAZD,IAAiC,IAAbC,GACtBX,EAAQ,CACNd,YAAa,UACbC,QAAS,mCAMjBsB,EACGJ,KAAK,SAA8B,GAClCpB,EADOC,EAAAA,YAAaC,EAAAA","file":"main.0731b3b6.js","sourceRoot":"..\\src","sourcesContent":["\n'use strict';\n\nfunction showNotification(messageType = 'warning', message) {\n  const body = document.querySelector('body');\n  const notification = document.createElement('div');\n\n  notification.classList.add(messageType);\n  notification.setAttribute('data-qa', 'notification');\n  notification.innerText = message;\n  body.append(notification);\n};\n\nconst promise1 = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve({\n      messageType: 'success',\n      message: 'First promise was resolved',\n    });\n  });\n\n  setTimeout(() => {\n    reject(new Error('First promise was rejected'));\n  }, 3000);\n});\n\npromise1\n  .then(\n    ({ messageType, message }) => {\n      showNotification(messageType, message);\n    },\n    ({ messageType, message }) => {\n      showNotification(messageType, message);\n    },\n  );\n\nconst promise2 = new Promise((resolve, reject) => {\n  document.addEventListener('click', () => {\n    resolve({\n      messageType: 'success',\n      message: 'Second promise was resolved',\n    });\n  });\n\n  document.addEventListener('contextmenu', (e) => {\n    e.preventDefault();\n\n    resolve({\n      messageType: 'success',\n      message: 'Second promise was resolved',\n    });\n  });\n});\n\npromise2\n  .then(\n    ({ messageType, message }) => {\n      showNotification(messageType, message);\n    }\n  );\n\nconst promise3 = new Promise((resolve, reject) => {\n  let btnLeft = false;\n  let btnRight = false;\n\n  document.addEventListener('mousedown', (e) => {\n    if (e.button === 0) {\n      btnLeft = true;\n    }\n\n    if (e.button === 2) {\n      btnRight = true;\n    }\n\n    if (btnLeft === true && btnRight === true) {\n      resolve({\n        messageType: 'success',\n        message: 'Third promise was resolved',\n      });\n    }\n  });\n});\n\npromise3\n  .then(({ messageType, message }) => {\n    showNotification(messageType, message);\n  });\n"]}